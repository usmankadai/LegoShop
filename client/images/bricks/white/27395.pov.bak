// Generated By: LDView 4.4 Beta 4c Copyright (C) 2021 Travis Cobbs & Peter Bartfai
// See: https://tcobbs.github.io/ldview/
// Date: Thu May 27 22:07:37 2021
// Input LDraw File: 27395.15.ldr
// LDraw File Author: dat_to_ldr_str.rb_re_batch_render.py
// 2021/05/27 22:05:29 : Light Modifications by process_pov.rb_batch_render.py
// This file was automatically generated from an LDraw file by the program
// LDView.  See comments above for further details.

#version 3.7;

#if (version >= 3.7) global_settings {assumed_gamma 1} #end

#ifndef (LDXQual) #declare LDXQual = 3; #end	// Quality (0 = Bounding Box; 1 = No Refraction; 2 = Normal; 3 = Stud Logos)
#ifndef (LDXSW) #declare LDXSW = 0.2; #end	// Seam Width (0 for no seams)
#ifndef (LDXStuds) #declare LDXStuds = 1; #end	// Show studs? (1 = YES; 0 = NO)
#ifndef (LDXRefls) #declare LDXRefls = 1; #end	// Reflections? (1 = YES; 0 = NO)
#ifndef (LDXShads) #declare LDXShads = 1; #end	// Shadows? (1 = YES; 0 = NO)
#ifndef (LDXBackground) #declare LDXBackground = 1; #end	// Include Background? (1 = YES; 0 = NO)
#ifndef (LDXFloor) #declare LDXFloor = 0; #end	// Include Floor? (1 = YES; 0 = NO)

// Model bounds information
#ifndef (LDXMinX) #declare LDXMinX = -39.75; #end
#ifndef (LDXMinY) #declare LDXMinY = -10.75; #end
#ifndef (LDXMinZ) #declare LDXMinZ = -79.75; #end
#ifndef (LDXMaxX) #declare LDXMaxX = 39.75; #end
#ifndef (LDXMaxY) #declare LDXMaxY = 239.75; #end
#ifndef (LDXMaxZ) #declare LDXMaxZ = 79.75; #end
#ifndef (LDXCenterX) #declare LDXCenterX = 0; #end
#ifndef (LDXCenterY) #declare LDXCenterY = 114.5; #end
#ifndef (LDXCenterZ) #declare LDXCenterZ = 0; #end
#ifndef (LDXCenter) #declare LDXCenter = <LDXCenterX,LDXCenterY,LDXCenterZ>; #end
#ifndef (LDXRadius) #declare LDXRadius = 153.712997; #end

// Camera settings
#ifndef (LDXCameraLoc) #declare LDXCameraLoc = < 2211.508301,-1771.290283,-1549.089844 >; #end	// Camera Location vector
#ifndef (LDXCameraLookAt) #declare LDXCameraLookAt = < 44.66317201324500274495,80.91919861174369543733,-31.84899299062226418755 >; #end	// Camera look-at point vector
#ifndef (LDXCameraSky) #declare LDXCameraSky = < -0.46984626724928180153,-0.81915203003369052581,0.32899002544697375505 >; #end	// Camera sky vector (<0,-1,0> will usually work for standard "up")
#ifndef (LDXCameraAngle) #declare LDXCameraAngle = 5; #end
#ifndef (LDXCameraAspect) #declare LDXCameraAspect = image_width/image_height; #end
#ifndef (LDXCameraTransform) #declare LDXCameraTransform = transform {}; #end

#ifndef (LDXFloorLoc) #declare LDXFloorLoc = LDXMaxY; #end	// Floor location. (Dependent on floor axis; MAX_Y is bottom of model)
#ifndef (LDXFloorAxis) #declare LDXFloorAxis = y; #end	// Floor axis (x, y, or z)
#ifndef (LDXFloorR) #declare LDXFloorR = 0.8; #end	// Floor Red
#ifndef (LDXFloorG) #declare LDXFloorG = 0.8; #end	// Floor Green
#ifndef (LDXFloorB) #declare LDXFloorB = 0.8; #end	// Floor Blue
#ifndef (LDXFloorAmb) #declare LDXFloorAmb = 0.4; #end	// Floor Ambient
#ifndef (LDXFloorDif) #declare LDXFloorDif = 0.4; #end	// Floor Diffuse
#ifndef (LDXAmb) #declare LDXAmb = 0.5; #end
#ifndef (LDXDif) #declare LDXDif = 1; #end
#ifndef (LDXRefl) #declare LDXRefl = 0.08; #end
#ifndef (LDXPhong) #declare LDXPhong = 0.5; #end
#ifndef (LDXPhongS) #declare LDXPhongS = 40; #end
#ifndef (LDXTRefl) #declare LDXTRefl = 0.2; #end
#ifndef (LDXTFilt) #declare LDXTFilt = 0.85; #end
#ifndef (LDXIoR) #declare LDXIoR = 1.25; #end
#ifndef (LDXRubberRefl) #declare LDXRubberRefl = 0; #end
#ifndef (LDXRubberPhong) #declare LDXRubberPhong = 0.1; #end
#ifndef (LDXRubberPhongS) #declare LDXRubberPhongS = 10; #end
#ifndef (LDXChromeRefl) #declare LDXChromeRefl = 0.85; #end
#ifndef (LDXChromeBril) #declare LDXChromeBril = 5; #end
#ifndef (LDXChromeSpec) #declare LDXChromeSpec = 0.8; #end
#ifndef (LDXChromeRough) #declare LDXChromeRough = 0.01; #end
#ifndef (LDXOpaqueNormal) #declare LDXOpaqueNormal = normal { bumps 0.001 scale 0.5 }; #end
#ifndef (LDXTransNormal) #declare LDXTransNormal = normal { bumps 0.001 scale 0.5 }; #end
#ifndef (LDXIPov) #declare LDXIPov = 1; #end	// Use inline POV code from LDraw file? (1 = YES; 0 = NO)
#ifndef (LDXBgR) #declare LDXBgR = 1; #end	// Background Red
#ifndef (LDXBgG) #declare LDXBgG = 1; #end	// Background Green
#ifndef (LDXBgB) #declare LDXBgB = 1; #end	// Background Blue
#ifndef (LDXOrigVer) #declare LDXOrigVer = version; #end	// DO NOT MODIFY

// Camera
#ifndef (LDXSkipCamera)
camera {
	location 1.02*LDXCameraLoc
	sky LDXCameraSky
	right LDXCameraAspect * < -1,0,0 >
	look_at LDXCameraLookAt
	angle LDXCameraAngle
	transform {LDXCameraTransform}
}
#end

// Lights

//rb_batch_render.py modification : light setup 
#declare LDXintesity = 0.82;
#declare LDXswitchlight1 = 0.1; //-y top
#declare LDXswitchlight2 = 0.8; //+y bottom
#declare LDXswitchlight3 = 0.7; //+x
#declare LDXswitchlight4 = 0.5; //-x
#declare LDXswitchlight5 = 0; //+z
#declare LDXswitchlight6 = 0.5; //-z
#declare LDXredlight = 1;
#declare LDXgreenlight = 1;
#declare LDXbluelight = 0.9;
#declare LDXGrid = 5;
#declare LDXDiameter = 1000;

#ifndef (LDXSkipLight1)
light_source {	// top
	<10,-800,0>*LDXRadius + LDXCenter
	color rgb LDXswitchlight1*<LDXredlight,LDXgreenlight,LDXbluelight>*LDXintesity
	area_light LDXDiameter,LDXDiameter,LDXGrid,LDXGrid
	orient
	circular
	adaptive 1
}
#end
#ifndef (LDXSkipLight2)
light_source {	// bottom
	<400,400,0>*LDXRadius + LDXCenter
	color rgb LDXswitchlight2*<LDXredlight,LDXgreenlight,LDXbluelight>*LDXintesity
	area_light LDXDiameter,LDXDiameter,LDXGrid,LDXGrid
	orient
	circular
	adaptive 1
}
#end
#ifndef (LDXSkipLight3)
light_source {	// left
	<200,-600,-200>*LDXRadius + LDXCenter
	color rgb LDXswitchlight3*<LDXredlight,LDXgreenlight,LDXbluelight>*LDXintesity
	area_light LDXDiameter,LDXDiameter,LDXGrid,LDXGrid
	orient
	circular
	adaptive 1
}
#end
#ifndef (LDXSkipLight4)
light_source {	// right
	<200,-600,200>*LDXRadius + LDXCenter
	color rgb LDXswitchlight4*<LDXredlight,LDXgreenlight,LDXbluelight>*LDXintesity
	area_light LDXDiameter,LDXDiameter,LDXGrid,LDXGrid
	orient
	circular
	adaptive 1
}
#end
#ifndef (LDXSkipLight5)
light_source {	// front
	<0,500,-200>*LDXRadius + LDXCenter
	color rgb LDXswitchlight5*<LDXredlight,LDXgreenlight,LDXbluelight>*LDXintesity
	area_light LDXDiameter,LDXDiameter,LDXGrid,LDXGrid
	orient
	circular
	adaptive 1
}
#end
#ifndef (LDXSkipLight6)
light_source {	// back
	<0,40,-200>*LDXRadius + LDXCenter
	color rgb LDXswitchlight6*<LDXredlight,LDXgreenlight,LDXbluelight>*LDXintesity
	area_light LDXDiameter,LDXDiameter,LDXGrid,LDXGrid
	orient
	circular
	adaptive 1
}
#end

#macro LDXSeamMatrix(Width, Height, Depth, CenterX, CenterY, CenterZ)
#local aw = 0;
#local ah = 0;
#local ad = 0;
#local ax = 0;
#local ay = 0;
#local az = 0;
#if (Width != 0)
#local aw = 1-LDXSW/Width;
#end
#if (Height != 0)
#local ah = 1-LDXSW/Height;
#end
#if (Depth != 0)
#local ad = 1-LDXSW/Depth;
#end
#if (Width != 0 & CenterX != 0)
#local ax = LDXSW/(Width / CenterX);
#end
#if (Height != 0 & CenterY != 0)
#local ay = LDXSW/(Height / CenterY);
#end
#if (Depth != 0 & CenterZ != 0)
#local az = LDXSW/(Depth / CenterZ);
#end
#if (aw <= 0)
#local aw = 1;
#local ax = 0;
#end
#if (ah <= 0)
#local ah = 1;
#local ay = 0;
#end
#if (ad <= 0)
#local ad = 1;
#local az = 0;
#end
matrix <aw,0,0,0,ah,0,0,0,ad,ax,ay,az>
#end


#if (LDXBackground != 0)
#if (version >= 3.7)
background { color srgb <LDXBgR,LDXBgG,LDXBgB> }
#else
background { color rgb <LDXBgR,LDXBgG,LDXBgB> }
#end
#end

#declare lg_quality = LDXQual;
#if (lg_quality = 3)
#declare lg_quality = 4;
#end

#declare lg_studs = LDXStuds;


#include "lg_defs.inc"

#include "lg_color.inc"

#ifndef (LDXColor7) // Light Grey
#declare LDXColor7 = #if (version >= 3.1) material { #end
	texture {
		lg_grey
	}
#if (version >= 3.1) } #end
#declare LDXColor7_slope = #if (version >= 3.1) material { #end
	texture {
		lg_grey
		#if (LDXQual > 1) normal { bumps 0.3 scale 25*0.02 } #end
	}
#if (version >= 3.1) } #end
#end

#ifndef (LDXColor15) // White
#declare LDXColor15 = #if (version >= 3.1) material { #end
	texture {
		lg_white
	}
#if (version >= 3.1) } #end
#declare LDXColor15_slope = #if (version >= 3.1) material { #end
	texture {
		lg_white
		#if (LDXQual > 1) normal { bumps 0.3 scale 25*0.02 } #end
	}
#if (version >= 3.1) } #end
#end

#declare LDX_4_dash_4cyli_dot_dat_in_part = cylinder // Cylinder 1
{
	<0,0,0>,<0,1,0>,1 open
}

#declare LDX_4_dash_4cyli_dot_dat = cylinder // Cylinder 1
{
	<0,0,0>,<0,1,0>,1 open
}

#declare LDX_4_dash_4ring3_dot_dat_in_part = disc // Ring 1
{
	<0,0,0>,<0,1,0>,4,3
}

#declare LDX_4_dash_4ring3_dot_dat = disc // Ring 1
{
	<0,0,0>,<0,1,0>,4,3
}

#declare LDX_stud7_dot_dat_in_part = union {
// Stud Duplo Open
// Name: stud7.dat
// Author: Tony Hafner [hafhead]
// !LDRAW_ORG Primitive UPDATE 2009-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2002-04-25 [PTadmin] Official Update 2002-02
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2009-06-21 [cwdee] Update ring references to 4-4ring
// !HISTORY 2009-09-03 [PTadmin] Official Update 2009-02
// BFC INVERTNEXT
	object {
		LDX_4_dash_4cyli_dot_dat_in_part
		matrix <9,0,0,0,4,0,0,0,9,0,-4,0>
	}
	object {
		LDX_4_dash_4cyli_dot_dat_in_part
		matrix <12,0,0,0,4,0,0,0,12,0,-4,0>
	}
	object {
		LDX_4_dash_4ring3_dot_dat_in_part
		matrix <3,0,0,0,1,0,0,0,3,0,-4,0>
	}
}

#declare LDX_stug7_dash_1x4_dot_dat_in_part = union {
// Stud Duplo Open Group  1 x  4
// Name: stug7-1x4.dat
// Author: Steffen [Steffen]
// !LDRAW_ORG Primitive UPDATE 2020-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2020-09-05 [PTadmin] Official Update 2020-02
	#if (LDXStuds)
		object {
			LDX_stud7_dot_dat_in_part
			matrix <1,0,0,0,1,0,0,0,1,-60,0,0>
		}
		object {
			LDX_stud7_dot_dat_in_part
			matrix <1,0,0,0,1,0,0,0,1,-20,0,0>
		}
		object {
			LDX_stud7_dot_dat_in_part
			matrix <1,0,0,0,1,0,0,0,1,20,0,0>
		}
		object {
			LDX_stud7_dot_dat_in_part
			matrix <1,0,0,0,1,0,0,0,1,60,0,0>
		}
	#end // LDXStuds
}

#declare LDX_4_dash_4ring7_dot_dat_in_part = disc // Ring 1
{
	<0,0,0>,<0,1,0>,8,7
}

#declare LDX_4_dash_4ring7_dot_dat = disc // Ring 1
{
	<0,0,0>,<0,1,0>,8,7
}

#declare LDX_stud8_dot_dat_in_part = union {
// Stud Duplo Tube
// Name: stud8.dat
// Author: Tony Hafner [hafhead]
// !LDRAW_ORG Primitive UPDATE 2009-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2002-04-25 [PTadmin] Official Update 2002-02
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2009-06-21 [cwdee] Update ring references to 4-4ring
// !HISTORY 2009-09-03 [PTadmin] Official Update 2009-02
// BFC INVERTNEXT
	object {
		LDX_4_dash_4cyli_dot_dat_in_part
		matrix <14,0,0,0,4,0,0,0,14,0,-4,0>
	}
	object {
		LDX_4_dash_4cyli_dot_dat_in_part
		matrix <16,0,0,0,4,0,0,0,16,0,-4,0>
	}
	object {
		LDX_4_dash_4ring7_dot_dat_in_part
		matrix <2,0,0,0,1,0,0,0,2,0,-4,0>
	}
}

#declare LDX_stug8_dash_1x3_dot_dat_in_part = union {
// Stud Duplo Tube Group  1 x  3
// Name: stug8-1x3.dat
// Author: Steffen [Steffen]
// !LDRAW_ORG Primitive UPDATE 2013-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2013-07-21 [PTadmin] Official Update 2013-01
	#if (LDXStuds)
		object {
			LDX_stud8_dot_dat_in_part
			matrix <1,0,0,0,1,0,0,0,1,-40,0,0>
		}
		object {
			LDX_stud8_dot_dat_in_part
			matrix <1,0,0,0,1,0,0,0,1,0,0,0>
		}
		object {
			LDX_stud8_dot_dat_in_part
			matrix <1,0,0,0,1,0,0,0,1,40,0,0>
		}
	#end // LDXStuds
}

#declare LDX_27395_dot_dat =
#if (LDXQual = 0)
box {
	<-80,-11,-40>,<80,240,40>
}
#else
union {
// Duplo Cabinet  2 x  4 x  5
// Name: 27395.dat
// Author: Philippe Hurbain [Philo]
// !LDRAW_ORG Unofficial_Part
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !CATEGORY Container
// !KEYWORDS Furniture, Wall, Shelf
// !HISTORY 2020-12-12 {LEGO/Unity Microgame} Original part shape
// !HISTORY 2021-01-24 [Philo] File preparation for LDraw Parts Tracker
	#if (LDXStuds)
		object {
			LDX_stug7_dash_1x4_dot_dat_in_part
			matrix <1,0,0,0,2.75,0,0,0,1,0,0,20>
		}
		object {
			LDX_stug7_dash_1x4_dot_dat_in_part
			matrix <1,0,0,0,2.75,0,0,0,1,0,0,-20>
		}
	#end // LDXStuds
// BFC INVERTNEXT
	#if (LDXStuds)
		object {
			LDX_stug8_dash_1x3_dot_dat_in_part
			matrix <1,0,0,0,-4,0,0,0,1,0,220,0>
		}
	#end // LDXStuds
// BFC INVERTNEXT
// BFC INVERTNEXT
	mesh2 {
		vertex_vectors {
			128,
			<-80,0,-40>, <-80,0,40>, <-80,240,-40>, <-80,240,40>,
			<-76,220,-36>, <-76,220,-21.5>, <-76,220,-18.5>, <-76,220,18.5>,
			<-76,220,21.5>, <-76,220,36>, <-76,239,-21.5>, <-76,239,-18.5>,
			<-76,239,18.5>, <-76,239,21.5>, <-76,240,-36>, <-76,240,36>,
			<-75,4,-40>, <-75,4,36>, <-75,145,-40>, <-75,145,36>,
			<-75,148,-40>, <-75,148,36>, <-75,216,-40>, <-75,216,36>,
			<-72,220,-21.5>, <-72,220,-18.5>, <-72,220,18.5>, <-72,220,21.5>,
			<-72,239,-21.5>, <-72,239,-18.5>, <-72,239,18.5>, <-72,239,21.5>,
			<-61.5,220,-36>, <-61.5,220,-32>, <-61.5,220,32>, <-61.5,220,36>,
			<-61.5,239,-36>, <-61.5,239,-32>, <-61.5,239,32>, <-61.5,239,36>,
			<-58.5,220,-36>, <-58.5,220,-32>, <-58.5,220,32>, <-58.5,220,36>,
			<-58.5,239,-36>, <-58.5,239,-32>, <-58.5,239,32>, <-58.5,239,36>,
			<-21.5,220,-36>, <-21.5,220,-32>, <-21.5,220,32>, <-21.5,220,36>,
			<-21.5,239,-36>, <-21.5,239,-32>, <-21.5,239,32>, <-21.5,239,36>,
			<-18.5,220,-36>, <-18.5,220,-32>, <-18.5,220,32>, <-18.5,220,36>,
			<-18.5,239,-36>, <-18.5,239,-32>, <-18.5,239,32>, <-18.5,239,36>,
			<18.5,220,-36>, <18.5,220,-32>, <18.5,220,32>, <18.5,220,36>,
			<18.5,239,-36>, <18.5,239,-32>, <18.5,239,32>, <18.5,239,36>,
			<21.5,220,-36>, <21.5,220,-32>, <21.5,220,32>, <21.5,220,36>,
			<21.5,239,-36>, <21.5,239,-32>, <21.5,239,32>, <21.5,239,36>,
			<58.5,220,-36>, <58.5,220,-32>, <58.5,220,32>, <58.5,220,36>,
			<58.5,239,-36>, <58.5,239,-32>, <58.5,239,32>, <58.5,239,36>,
			<61.5,220,-36>, <61.5,220,-32>, <61.5,220,32>, <61.5,220,36>,
			<61.5,239,-36>, <61.5,239,-32>, <61.5,239,32>, <61.5,239,36>,
			<72,220,-21.5>, <72,220,-18.5>, <72,220,18.5>, <72,220,21.5>,
			<72,239,-21.5>, <72,239,-18.5>, <72,239,18.5>, <72,239,21.5>,
			<75,4,-40>, <75,4,36>, <75,145,-40>, <75,145,36>,
			<75,148,-40>, <75,148,36>, <75,216,-40>, <75,216,36>,
			<76,220,-36>, <76,220,-21.5>, <76,220,-18.5>, <76,220,18.5>,
			<76,220,21.5>, <76,220,36>, <76,239,-21.5>, <76,239,-18.5>,
			<76,239,18.5>, <76,239,21.5>, <76,240,-36>, <76,240,36>,
			<80,0,-40>, <80,0,40>, <80,240,-40>, <80,240,40>
		}
		normal_vectors {
			6,
			<-1,0,0>, <0,-1,0>, <0,0,-1>, <0,0,1>,
			<0,1,0>, <1,0,0>
		}
		face_indices {
			152,
			<1, 125, 124>, <1, 124, 0>, <1, 3, 127>, <1, 127, 125>,
			<0, 2, 3>, <0, 3, 1>, <125, 127, 126>, <125, 126, 124>,
			<14, 122, 126>, <14, 126, 2>, <15, 14, 2>, <15, 2, 3>,
			<123, 127, 126>, <123, 126, 122>, <15, 3, 127>, <15, 127, 123>,
			<9, 117, 112>, <9, 112, 4>, <9, 15, 123>, <9, 123, 117>,
			<4, 14, 15>, <4, 15, 9>, <112, 122, 14>, <112, 14, 4>,
			<117, 123, 122>, <117, 122, 112>, <53, 61, 60>, <53, 60, 52>,
			<53, 49, 57>, <53, 57, 61>, <52, 48, 49>, <52, 49, 53>,
			<61, 57, 56>, <61, 56, 60>, <37, 45, 44>, <37, 44, 36>,
			<37, 33, 41>, <37, 41, 45>, <36, 32, 33>, <36, 33, 37>,
			<45, 41, 40>, <45, 40, 44>, <28, 29, 11>, <28, 11, 10>,
			<28, 24, 25>, <28, 25, 29>, <10, 5, 24>, <10, 24, 28>,
			<29, 25, 6>, <29, 6, 11>, <77, 69, 68>, <77, 68, 76>,
			<77, 73, 65>, <77, 65, 69>, <76, 72, 73>, <76, 73, 77>,
			<69, 65, 64>, <69, 64, 68>, <93, 85, 84>, <93, 84, 92>,
			<93, 89, 81>, <93, 81, 85>, <92, 88, 89>, <92, 89, 93>,
			<85, 81, 80>, <85, 80, 84>, <100, 101, 119>, <100, 119, 118>,
			<100, 96, 97>, <100, 97, 101>, <118, 113, 96>, <118, 96, 100>,
			<101, 97, 114>, <101, 114, 119>, <54, 62, 63>, <54, 63, 55>,
			<54, 50, 58>, <54, 58, 62>, <55, 51, 50>, <55, 50, 54>,
			<62, 58, 59>, <62, 59, 63>, <38, 46, 47>, <38, 47, 39>,
			<38, 34, 42>, <38, 42, 46>, <39, 35, 34>, <39, 34, 38>,
			<46, 42, 43>, <46, 43, 47>, <31, 30, 12>, <31, 12, 13>,
			<31, 27, 26>, <31, 26, 30>, <13, 8, 27>, <13, 27, 31>,
			<30, 26, 7>, <30, 7, 12>, <78, 70, 71>, <78, 71, 79>,
			<78, 74, 66>, <78, 66, 70>, <79, 75, 74>, <79, 74, 78>,
			<70, 66, 67>, <70, 67, 71>, <94, 86, 87>, <94, 87, 95>,
			<94, 90, 82>, <94, 82, 86>, <95, 91, 90>, <95, 90, 94>,
			<86, 82, 83>, <86, 83, 87>, <103, 102, 120>, <103, 120, 121>,
			<103, 99, 98>, <103, 98, 102>, <121, 116, 99>, <121, 99, 103>,
			<102, 98, 115>, <102, 115, 120>, <109, 111, 23>, <109, 23, 21>,
			<109, 108, 110>, <109, 110, 111>, <21, 20, 108>, <21, 108, 109>,
			<23, 22, 20>, <23, 20, 21>, <111, 110, 22>, <111, 22, 23>,
			<110, 126, 124>, <110, 124, 104>, <16, 104, 124>, <16, 124, 0>,
			<22, 16, 0>, <22, 0, 2>, <110, 22, 2>, <110, 2, 126>,
			<105, 107, 19>, <105, 19, 17>, <105, 104, 106>, <105, 106, 107>,
			<17, 16, 104>, <17, 104, 105>, <19, 18, 16>, <19, 16, 17>,
			<107, 106, 18>, <107, 18, 19>, <106, 18, 20>, <106, 20, 108>
		}
		normal_indices {
			152,
			<1, 1, 1>, <1, 1, 1>, <3, 3, 3>, <3, 3, 3>,
			<0, 0, 0>, <0, 0, 0>, <5, 5, 5>, <5, 5, 5>,
			<1, 1, 1>, <1, 1, 1>, <1, 1, 1>, <1, 1, 1>,
			<1, 1, 1>, <1, 1, 1>, <1, 1, 1>, <1, 1, 1>,
			<1, 1, 1>, <1, 1, 1>, <3, 3, 3>, <3, 3, 3>,
			<0, 0, 0>, <0, 0, 0>, <2, 2, 2>, <2, 2, 2>,
			<5, 5, 5>, <5, 5, 5>, <1, 1, 1>, <1, 1, 1>,
			<2, 2, 2>, <2, 2, 2>, <5, 5, 5>, <5, 5, 5>,
			<0, 0, 0>, <0, 0, 0>, <1, 1, 1>, <1, 1, 1>,
			<2, 2, 2>, <2, 2, 2>, <5, 5, 5>, <5, 5, 5>,
			<0, 0, 0>, <0, 0, 0>, <4, 4, 4>, <4, 4, 4>,
			<5, 5, 5>, <5, 5, 5>, <2, 2, 2>, <2, 2, 2>,
			<3, 3, 3>, <3, 3, 3>, <4, 4, 4>, <4, 4, 4>,
			<3, 3, 3>, <3, 3, 3>, <5, 5, 5>, <5, 5, 5>,
			<0, 0, 0>, <0, 0, 0>, <4, 4, 4>, <4, 4, 4>,
			<3, 3, 3>, <3, 3, 3>, <5, 5, 5>, <5, 5, 5>,
			<0, 0, 0>, <0, 0, 0>, <1, 1, 1>, <1, 1, 1>,
			<5, 5, 5>, <5, 5, 5>, <3, 3, 3>, <3, 3, 3>,
			<2, 2, 2>, <2, 2, 2>, <4, 4, 4>, <4, 4, 4>,
			<2, 2, 2>, <2, 2, 2>, <0, 0, 0>, <0, 0, 0>,
			<5, 5, 5>, <5, 5, 5>, <4, 4, 4>, <4, 4, 4>,
			<2, 2, 2>, <2, 2, 2>, <0, 0, 0>, <0, 0, 0>,
			<5, 5, 5>, <5, 5, 5>, <1, 1, 1>, <1, 1, 1>,
			<0, 0, 0>, <0, 0, 0>, <2, 2, 2>, <2, 2, 2>,
			<3, 3, 3>, <3, 3, 3>, <1, 1, 1>, <1, 1, 1>,
			<3, 3, 3>, <3, 3, 3>, <0, 0, 0>, <0, 0, 0>,
			<5, 5, 5>, <5, 5, 5>, <1, 1, 1>, <1, 1, 1>,
			<3, 3, 3>, <3, 3, 3>, <0, 0, 0>, <0, 0, 0>,
			<5, 5, 5>, <5, 5, 5>, <4, 4, 4>, <4, 4, 4>,
			<0, 0, 0>, <0, 0, 0>, <3, 3, 3>, <3, 3, 3>,
			<2, 2, 2>, <2, 2, 2>, <2, 2, 2>, <2, 2, 2>,
			<0, 0, 0>, <0, 0, 0>, <4, 4, 4>, <4, 4, 4>,
			<5, 5, 5>, <5, 5, 5>, <1, 1, 1>, <1, 1, 1>,
			<3, 3, 3>, <3, 3, 3>, <3, 3, 3>, <3, 3, 3>,
			<3, 3, 3>, <3, 3, 3>, <3, 3, 3>, <3, 3, 3>,
			<2, 2, 2>, <2, 2, 2>, <0, 0, 0>, <0, 0, 0>,
			<4, 4, 4>, <4, 4, 4>, <5, 5, 5>, <5, 5, 5>,
			<1, 1, 1>, <1, 1, 1>, <3, 3, 3>, <3, 3, 3>
		}
	}
}
#end

#declare LDX_27395_dot_15_dot_ldr = union {
// Untitled
// Name: 27395.ldr
// Author: dat_to_ldr_str.rb_re_batch_render.py
// Generated : 2021/05/27 22:05:29
// ROTATION CENTER 0 0 0 1 Custom
// ROTATION CONFIG 0 0
	object {
		LDX_27395_dot_dat
		LDXSeamMatrix(160, 251, 80, 0, 114.5, 0)
		matrix <0,0,1,0,1,0,-1,0,0,0,0,0>
		#if (version >= 3.1) material #else texture #end { LDXColor15 }
	}
#if (LDXRefls = 0)
	no_reflection
#end
#if (LDXShads = 0)
	no_shadow
#end
}

// 27395.15.ldr
object {
	LDX_27395_dot_15_dot_ldr
	#if (version >= 3.1) material #else texture #end { LDXColor7 }
}

// Floor
#if (LDXFloor != 0)
object {
	plane { LDXFloorAxis, LDXFloorLoc hollow }
	texture {
#if (version >= 3.7)
		pigment { color srgb <LDXFloorR,LDXFloorG,LDXFloorB> }
#else
		pigment { color rgb <LDXFloorR,LDXFloorG,LDXFloorB> }
#end
		finish { ambient LDXFloorAmb diffuse LDXFloorDif }
	}
}
#end

